services:
  nuxt-app-dev:
    container_name: nuxt-app-dev
    build:
      context: ./nuxt-app
      dockerfile: Dockerfile.dev
    volumes:
      - ./nuxt-app/app:/workspace/app
      - ./nuxt-app/server:/workspace/server
    profiles:
      - dev
    ports:
      - 3000:3000
      - 24678:24678 # HMR
    environment:
      - NODE_ENV=development
      - NUXT_STRAPI_URL=${STRAPI_URL}
      - NUXT_PUBLIC_STRAPI_URL=${STRAPI_PUBLIC_URL}
      - NUXT_STRAPI_TOKEN=${STRAPI_TOKEN}
      - NUXT_PUBLIC_STRAPI_TOKEN=${STRAPI_TOKEN}
      - STYLELINT_CSS_VARIABLES_PATH=/workspace/app/assets/css/variables.css
    networks:
      - app-network
    depends_on:
      - strapi-dev
      - strapiDB

  nuxt-app-prod:
    container_name: nuxt-app-prod
    build:
      context: ./nuxt-app
      dockerfile: Dockerfile
    profiles:
      - prod
    ports:
      - 3000:3000
    environment:
      - NUXT_STRAPI_URL=${STRAPI_URL}
      - NUXT_PUBLIC_STRAPI_URL=${STRAPI_PUBLIC_URL}
      - NUXT_STRAPI_TOKEN=${STRAPI_TOKEN}
      - NUXT_PUBLIC_STRAPI_TOKEN=${STRAPI_TOKEN}
    networks:
      - app-network
    depends_on:
      - strapi-prod
      - strapiDB

  strapi-dev:
    container_name: strapi-dev
    build:
      context: ./strapi
      dockerfile: Dockerfile.dev
    profiles:
      - dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PUBLIC_URL: ${PUBLIC_URL}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/package-lock.json:/opt/app/package-lock.json
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - app-network
    depends_on:
      - strapiDB

  strapi-prod:
    container_name: strapi-prod
    build:
      context: ./strapi
      dockerfile: Dockerfile
    profiles:
      - prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PUBLIC_URL: ${PUBLIC_URL}
      STRAPI_PUBLIC_URL: ${STRAPI_PUBLIC_URL}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      BREVO_API_KEY: ${BREVO_API_KEY}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - app-network
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:16.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    profiles:
      - prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/www:/var/www/html:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - app-network
    depends_on:
      nuxt-app-prod:
        condition: service_started
      strapi-prod:
        condition: service_started

  certbot:
    image: certbot/certbot
    container_name: certbot
    profiles:
      - prod
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/www:/var/www/html
    depends_on:
      - nginx

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    profiles:
      - dev
    ports:
      - "8025:8025"
      - "1025:1025"
    volumes:
      - mailpit-data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: "/data/mailpit.db"
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  certbot-etc:
  certbot-var:
  strapi-data:
  mailpit-data:
